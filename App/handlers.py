import requests
import base64
import os
from dotenv import load_dotenv
from aiogram import Bot, Router, types
from aiogram.filters import Command

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
VT_TOKEN = os.getenv("VT_TOKEN")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–∫–µ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω
if not VT_TOKEN:
    raise ValueError("‚ùå VT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å .env")

router = Router()

def check_url_with_virustotal(url):
    url_id = base64.urlsafe_b64encode(url.encode()).decode().strip("=")
    headers = {"x-apikey": VT_TOKEN}

    response = requests.get(f'https://www.virustotal.com/api/v3/urls/{url_id}', headers=headers)
    
    if response.status_code == 200:
        result = response.json()
        analysis_stats = result['data']['attributes']['last_analysis_stats']
        if analysis_stats['malicious'] > 0:
            return {"safe": False, "message": "üö® –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —É–≥—Ä–æ–∑–∞!"}
        else:
            return {"safe": True, "message": "‚úÖ –°—Å—ã–ª–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–∞."}
    else:
        return {"safe": False, "message": f"‚ö†Ô∏è –û—à–∏–±–∫–∞ API: {response.status_code}"}

@router.message(Command('start'))
async def send_welcome(message: types.Message):
    await message.reply("üëã –ü—Ä–∏–≤–µ—Ç! –ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ URL, –∏ —è –ø—Ä–æ–≤–µ—Ä—é –µ–≥–æ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —É–≥—Ä–æ–∑.")

@router.message()
async def check_url(message: types.Message):
    url = message.text.strip()
    
    if not url.startswith(('http://', 'https://')):
        await message.reply("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π URL, –Ω–∞—á–∏–Ω–∞—é—â–∏–π—Å—è —Å http:// –∏–ª–∏ https://")
        return

    await message.reply("üîç –ü—Ä–æ–≤–µ—Ä—è—é —Å—Å—ã–ª–∫—É...")
    result = check_url_with_virustotal(url)
    await message.reply(result['message'])
